{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\my-project\\\\src\\\\components\\\\Main\\\\Form\\\\Form.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { TextField, Grid, Typography, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport formatDate from '../../../utils/formatDate';\nimport useStyles from './styles';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport { useSpeechContext } from '@speechly/react-client';\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(Date())\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const {\n    addTransaction\n  } = useContext(ExpenseTrackerContext);\n  const {\n    segment\n  } = useSpeechContext();\n\n  const createTransaction = () => {\n    const transaction = { ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    };\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }\n  }, segment ? /*#__PURE__*/React.createElement(React.Fragment, null, segment.words.map(w => w.value).join(\" \")) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.type,\n    onChange: e => setFormData({ ...formData,\n      type: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.category,\n    onChange: e => setFormData({ ...formData,\n      category: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, selectedCategories.map(c => /*#__PURE__*/React.createElement(MenuItem, {\n    key: c.type,\n    value: c.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 50\n    }\n  }, c.type))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Amount\",\n    fullWidth: true,\n    value: formData.amount,\n    onChange: e => setFormData({ ...formData,\n      amount: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"Date\",\n    fullWidth: true,\n    value: formData.date,\n    onChange: e => setFormData({ ...formData,\n      date: formatDate(e.target.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: createTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }\n  }, \"Create\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/DELL/my-project/src/components/Main/Form/Form.jsx"],"names":["React","useState","useContext","TextField","Grid","Typography","Button","FormControl","InputLabel","Select","MenuItem","ExpenseTrackerContext","v4","uuidv4","formatDate","useStyles","incomeCategories","expenseCategories","useSpeechContext","initialState","amount","category","type","date","Date","Form","classes","formData","setFormData","addTransaction","segment","createTransaction","transaction","Number","id","selectedCategories","words","map","w","value","join","e","target","c","button"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react';\r\nimport {TextField,Grid,Typography,Button,FormControl,InputLabel,Select,MenuItem} from '@material-ui/core'\r\nimport {ExpenseTrackerContext} from '../../../context/context'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport formatDate from '../../../utils/formatDate'\r\nimport useStyles from './styles'\r\nimport {incomeCategories,expenseCategories} from '../../../constants/categories'\r\nimport {useSpeechContext} from '@speechly/react-client'\r\n\r\nconst initialState={\r\n    amount:'',\r\n    category:'',\r\n    type:'Income',\r\n    date:formatDate( Date()),\r\n}\r\n\r\nconst Form = () => {\r\n    const classes=useStyles();\r\n    const [formData,setFormData]=useState(initialState);\r\n    const {addTransaction}=useContext(ExpenseTrackerContext);\r\n    const {segment}=useSpeechContext();\r\n\r\n    const createTransaction=()=>{\r\n        const transaction={...formData,amount:Number(formData.amount),id:uuidv4()}\r\n        \r\n        addTransaction(transaction);\r\n        setFormData(initialState);\r\n    }\r\n    const selectedCategories=formData.type==='Income'?incomeCategories:expenseCategories;\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n             <Grid item xs={12}>\r\n               <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n               {segment?(\r\n                   <>\r\n                       {segment.words.map((w)=>w.value).join(\" \")}\r\n                   </>\r\n               ):null}\r\n               </Typography>\r\n             </Grid>\r\n             <Grid item xs={6}>\r\n             <FormControl fullWidth>\r\n                <InputLabel>Type</InputLabel>\r\n                <Select value={formData.type} onChange={(e)=>setFormData({\r\n                    ...formData,type:e.target.value\r\n                })}>\r\n                <MenuItem value=\"Income\">Income</MenuItem>\r\n                <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                </Select>\r\n             </FormControl>\r\n             </Grid>\r\n             <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select value={formData.category} onChange={(e)=>setFormData({\r\n                    ...formData,category:e.target.value\r\n                })}>\r\n                   {selectedCategories.map((c)=> <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                </Select>\r\n                </FormControl>\r\n             </Grid>\r\n             <Grid item xs={6}>\r\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e)=>setFormData({\r\n                    ...formData,amount:e.target.value\r\n                })}></TextField>\r\n             </Grid>\r\n             <Grid item xs={6}>\r\n             <TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e)=>setFormData({\r\n                ...formData,date:formatDate(e.target.value)  \r\n            })}  ></TextField>\r\n             </Grid>\r\n             <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}