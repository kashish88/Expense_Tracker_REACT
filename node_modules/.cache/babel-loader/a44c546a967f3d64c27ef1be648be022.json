{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst browser_audio_processor_1 = require(\"./browser_audio_processor\");\n\nclass BrowserMicrophone {\n  constructor(sampleRate, audioProcessor) {\n    this.onAudioCb = () => {};\n\n    this.handleAudio = audioBuffer => {\n      this.onAudioCb(audioBuffer);\n    };\n\n    this.audioProcessor = audioProcessor !== null && audioProcessor !== void 0 ? audioProcessor : new browser_audio_processor_1.BrowserAudioProcessor(sampleRate, this.handleAudio);\n  }\n\n  onAudio(cb) {\n    this.onAudioCb = cb;\n  }\n\n  initialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.audioProcessor.initialize();\n      this.mute();\n    });\n  }\n\n  close() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.mute();\n      return this.audioProcessor.close();\n    });\n  }\n\n  mute() {\n    this.audioProcessor.mute();\n  }\n\n  unmute() {\n    this.audioProcessor.unmute();\n  }\n\n}\n\nexports.BrowserMicrophone = BrowserMicrophone;","map":{"version":3,"sources":["../../src/microphone/browser_microphone.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,yBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEA,MAAa,iBAAb,CAA8B;AAI5B,EAAA,WAAA,CAAY,UAAZ,EAAgC,cAAhC,EAA+D;AAFvD,SAAA,SAAA,GAA2B,MAAK,CAAG,CAAnC;;AA4BS,SAAA,WAAA,GAAe,WAAD,IAAkC;AAC/D,WAAK,SAAL,CAAe,WAAf;AACD,KAFgB;;AAzBf,SAAK,cAAL,GAAsB,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAA,cAAA,GAAkB,IAAI,yBAAA,CAAA,qBAAJ,CAA0B,UAA1B,EAAsC,KAAK,WAA3C,CAAxC;AACD;;AAED,EAAA,OAAO,CAAC,EAAD,EAAkB;AACvB,SAAK,SAAL,GAAiB,EAAjB;AACD;;AAEK,EAAA,UAAU,GAAA;;AACd,YAAM,KAAK,cAAL,CAAoB,UAApB,EAAN;AACA,WAAK,IAAL;AACD,K;AAAA;;AAEK,EAAA,KAAK,GAAA;;AACT,WAAK,IAAL;AACA,aAAO,KAAK,cAAL,CAAoB,KAApB,EAAP;AACD,K;AAAA;;AAED,EAAA,IAAI,GAAA;AACF,SAAK,cAAL,CAAoB,IAApB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,SAAK,cAAL,CAAoB,MAApB;AACD;;AA5B2B;;AAA9B,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst browser_audio_processor_1 = require(\"./browser_audio_processor\");\nclass BrowserMicrophone {\n    constructor(sampleRate, audioProcessor) {\n        this.onAudioCb = () => { };\n        this.handleAudio = (audioBuffer) => {\n            this.onAudioCb(audioBuffer);\n        };\n        this.audioProcessor = audioProcessor !== null && audioProcessor !== void 0 ? audioProcessor : new browser_audio_processor_1.BrowserAudioProcessor(sampleRate, this.handleAudio);\n    }\n    onAudio(cb) {\n        this.onAudioCb = cb;\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.audioProcessor.initialize();\n            this.mute();\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.mute();\n            return this.audioProcessor.close();\n        });\n    }\n    mute() {\n        this.audioProcessor.mute();\n    }\n    unmute() {\n        this.audioProcessor.unmute();\n    }\n}\nexports.BrowserMicrophone = BrowserMicrophone;\n//# sourceMappingURL=browser_microphone.js.map"]},"metadata":{},"sourceType":"script"}