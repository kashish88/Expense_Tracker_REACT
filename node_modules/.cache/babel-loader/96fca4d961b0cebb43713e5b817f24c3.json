{"ast":null,"code":"import LanguageCode from 'iso-639-1-zh';\nimport CountryCode from 'iso-3166-1-alpha-2';\nconst REG = /^([a-z]{2})-([A-Z]{2})$/;\nexport default class LocaleCode {\n  /* language iso-639-1 */\n  static getLanguageCode(code) {\n    var match = code.match(REG);\n    if (!match || match.length < 1) return '';\n    return match[1];\n  }\n\n  static getLanguageName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code);\n    return LanguageCode.getName(languageCode);\n  }\n\n  static getLanguageNativeName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code);\n    return LanguageCode.getNativeName(languageCode);\n  }\n\n  static getLanguageZhName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code);\n    return LanguageCode.getZhName(languageCode);\n  }\n\n  static validateLanguageCode(code) {\n    var languageCode = LocaleCode.getLanguageCode(code);\n    return LanguageCode.validate(languageCode);\n  }\n\n  static getLanguages(codes) {\n    var list = [];\n\n    for (var i = 0; i < codes.length; i++) {\n      list.push({\n        code: codes[i],\n        name: LocaleCode.getLanguageName(codes[i]),\n        nativeName: LocaleCode.getLanguageNativeName(codes[i]),\n        zhName: LocaleCode.getLanguageZhName(codes[i])\n      });\n    }\n\n    return list;\n  }\n  /* country iso-3166-1-alpha-2 */\n\n\n  static getCountryCode(code) {\n    var match = code.match(REG);\n    if (!match || match.length < 2) return '';\n    return match[2];\n  }\n\n  static getCountryName(code) {\n    var countryCode = LocaleCode.getCountryCode(code);\n    return CountryCode.getCountry(countryCode);\n  }\n\n  static validateCountryCode(code) {\n    code = LocaleCode.getCountryCode(code);\n\n    if (CountryCode.getCodes().indexOf(code) === -1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /* validate */\n\n\n  static validate(code) {\n    var match = code.match(REG);\n\n    if (match && match.length === 3 && LocaleCode.validateLanguageCode(code) && LocaleCode.validateCountryCode(code)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/DELL/my-project/node_modules/locale-code/src/index.js"],"names":["LanguageCode","CountryCode","REG","LocaleCode","getLanguageCode","code","match","length","getLanguageName","languageCode","getName","getLanguageNativeName","getNativeName","getLanguageZhName","getZhName","validateLanguageCode","validate","getLanguages","codes","list","i","push","name","nativeName","zhName","getCountryCode","getCountryName","countryCode","getCountry","validateCountryCode","getCodes","indexOf"],"mappings":"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","sourcesContent":["import LanguageCode from 'iso-639-1-zh'\nimport CountryCode from 'iso-3166-1-alpha-2'\n\nconst REG = /^([a-z]{2})-([A-Z]{2})$/\n\nexport default class LocaleCode {\n  /* language iso-639-1 */\n  static getLanguageCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 1) return ''\n    return match[1]\n  }\n\n  static getLanguageName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getName(languageCode)\n  }\n\n  static getLanguageNativeName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getNativeName(languageCode)\n  }\n\n  static getLanguageZhName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getZhName(languageCode)\n  }\n\n  static validateLanguageCode(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.validate(languageCode)\n  }\n\n  static getLanguages(codes) {\n    var list = []\n    for (var i = 0; i < codes.length; i++) {\n      list.push({\n        code:codes[i], \n        name: LocaleCode.getLanguageName(codes[i]),\n        nativeName: LocaleCode.getLanguageNativeName(codes[i]),\n        zhName: LocaleCode.getLanguageZhName(codes[i])\n      })\n    }\n    return list\n  }\n\n  /* country iso-3166-1-alpha-2 */\n  static getCountryCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 2) return ''\n    return match[2]\n  }\n  static getCountryName(code) {\n    var countryCode = LocaleCode.getCountryCode(code)\n    return CountryCode.getCountry(countryCode)\n  }\n  static validateCountryCode(code) {\n    code = LocaleCode.getCountryCode(code)\n    if(CountryCode.getCodes().indexOf(code) === -1) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /* validate */\n  static validate(code) {\n    var match = code.match(REG)\n    if(match && match.length === 3 && \n      LocaleCode.validateLanguageCode(code) &&\n      LocaleCode.validateCountryCode(code)) {\n      return true\n    } else {\n      return false\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}