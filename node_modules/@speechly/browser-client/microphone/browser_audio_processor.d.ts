import { AudioFilter } from './sampler';
export declare type AudioHandler = (audioBuffer: Int16Array) => void;
export interface AudioProcessor {
    initialize(): Promise<void>;
    close(): Promise<void>;
    mute(): void;
    unmute(): void;
}
export declare class BrowserAudioProcessor implements AudioProcessor {
    private initialized;
    private muted;
    private readonly isWebkit;
    private readonly onAudio;
    private readonly audioContext;
    private readonly sampler;
    private readonly nativeResamplingSupported;
    private readonly sampleRate;
    private audioTrack?;
    private mediaStream?;
    private audioProcessor?;
    constructor(sampleRate: number, onAudio: AudioHandler, sampler?: AudioFilter);
    initialize(): Promise<void>;
    close(): Promise<void>;
    mute(): void;
    unmute(): void;
    private readonly handleAudio;
}
