"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PushToTalkButton = void 0;
var react_1 = __importStar(require("react"));
var react_spring_1 = require("react-spring");
var useKeyboardEvent_1 = require("../hooks/useKeyboardEvent");
var react_client_1 = require("@speechly/react-client");
var pubsub_js_1 = __importDefault(require("pubsub-js"));
var styled_components_1 = __importStar(require("styled-components"));
var types_1 = require("../types");
/**
 * A React component that renders a push-to-talk microphone button.
 *
 * Make sure to place this component inside your `SpeechProvider` component imported from `@speechly/react-client`.
 *
 * @public
 */
var PushToTalkButton = function (_a) {
    var captureKey = _a.captureKey, _b = _a.size, size = _b === void 0 ? '6.0rem' : _b, _c = _a.gradientStops, gradientStops = _c === void 0 ? ['#15e8b5', '#4fa1f9'] : _c;
    var _d = react_client_1.useSpeechContext(), speechState = _d.speechState, toggleRecording = _d.toggleRecording, initialise = _d.initialise;
    var _e = react_1.useReducer(buttonReducer, ButtonDefaultState), tangentButtonState = _e[0], buttonDispatch = _e[1];
    var _f = react_spring_1.useSpring(function () { return ({
        holdScale: 1,
        effectOpacity: 0,
    }); }), springProps = _f[0], setSpringProps = _f[1];
    useKeyboardEvent_1.useKeyboardEvent(function (event) { return __awaiter(void 0, void 0, void 0, function () {
        var err_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, onKeyPress(event)];
                case 1:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 2:
                    err_1 = _a.sent();
                    console.error('Error handling onKeyPress', err_1);
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); }, function (event) { return onKeyRelease(event); }, [captureKey, speechState]);
    var tangentPressAction = function () { return __awaiter(void 0, void 0, void 0, function () {
        var err_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    // Speechly & Mic initialise needs to be here (a function triggered by event handler), otherwise it won't work reliably on Safari iOS as of 11/2020
                    vibrate();
                    if (!isStartButtonVisible(speechState)) return [3 /*break*/, 5];
                    setSpringProps({ holdScale: 1.35, config: { tension: 500 } });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, initialise()];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    err_2 = _a.sent();
                    console.error('Error initiasing Speechly', err_2);
                    return [3 /*break*/, 4];
                case 4: return [3 /*break*/, 7];
                case 5:
                    setSpringProps({
                        reset: false,
                        effectOpacity: 1,
                        holdScale: 1.35,
                        config: { tension: 500 },
                    });
                    return [4 /*yield*/, micStart()];
                case 6:
                    _a.sent();
                    _a.label = 7;
                case 7:
                    buttonDispatch({ type: TangentEvents.Hold });
                    return [2 /*return*/];
            }
        });
    }); };
    var onTangentButtonPress = function (event) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    event.preventDefault();
                    event.stopPropagation();
                    return [4 /*yield*/, tangentPressAction()];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); };
    var onKeyPress = function (event) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(captureKey !== undefined)) return [3 /*break*/, 3];
                    if (!(event.key === captureKey)) return [3 /*break*/, 3];
                    if (!!event.repeat) return [3 /*break*/, 2];
                    return [4 /*yield*/, tangentPressAction()];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2:
                    event.preventDefault();
                    event.stopPropagation();
                    _a.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var onTangentButtonRelease = function (event) {
        buttonDispatch({ type: TangentEvents.Release });
    };
    var onKeyRelease = function (event) {
        if (event.key === captureKey) {
            buttonDispatch({ type: TangentEvents.Release });
        }
    };
    var micStart = react_1.useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    switch (speechState) {
                        case react_client_1.SpeechState.Idle:
                        case react_client_1.SpeechState.Recording:
                        case react_client_1.SpeechState.Loading:
                            return [2 /*return*/];
                    }
                    return [4 /*yield*/, toggleRecording()
                        // eslint-disable-next-line react-hooks/exhaustive-deps
                    ];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); }, [speechState]);
    var micStop = react_1.useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    switch (speechState) {
                        case react_client_1.SpeechState.Idle:
                        case react_client_1.SpeechState.Connecting:
                        case react_client_1.SpeechState.Ready:
                            return [2 /*return*/];
                    }
                    return [4 /*yield*/, toggleRecording()
                        // eslint-disable-next-line react-hooks/exhaustive-deps
                    ];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); }, [speechState]);
    // Handle tangent release (via button, keyboard hotkey)
    react_1.useEffect(function () {
        function handle() {
            return __awaiter(this, void 0, void 0, function () {
                var animateButtonToReleaseState;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            animateButtonToReleaseState = false;
                            if (!tangentButtonState.processEvent) return [3 /*break*/, 3];
                            pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentClick, { state: speechState });
                            if (!!tangentButtonState.mouseDrag) return [3 /*break*/, 2];
                            vibrate();
                            animateButtonToReleaseState = true;
                            if (!!isStartButtonVisible(speechState)) return [3 /*break*/, 2];
                            return [4 /*yield*/, micStop()];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            // eslint-disable-next-line react-hooks/exhaustive-deps
                            buttonDispatch({ type: TangentEvents.Handled });
                            _a.label = 3;
                        case 3:
                            // Put button in resting state. Also do this on SpeechState.Ready as we may not get the keyboard up press due to permission prompt
                            if (animateButtonToReleaseState || speechState === react_client_1.SpeechState.Ready) {
                                setSpringProps({
                                    reset: false,
                                    effectOpacity: 0,
                                    holdScale: 1.0,
                                    config: { tension: 170 },
                                });
                            }
                            return [2 /*return*/];
                    }
                });
            });
        }
        handle().catch(function (err) {
            return console.error('Error handling tangent release', err);
        });
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [tangentButtonState, speechState]);
    var isStartButtonVisible = function (state) {
        switch (state) {
            case react_client_1.SpeechState.Idle:
            case react_client_1.SpeechState.Connecting:
                return true;
        }
        return false;
    };
    // Track document mouseup to reliably release the mic if user drags outside button area.
    react_1.default.useEffect(function () {
        var handleMouseUp = function () {
            return buttonDispatch({ type: TangentEvents.Cancel });
        };
        document.addEventListener('mouseup', handleMouseUp);
        return function () {
            document.removeEventListener('mouseup', handleMouseUp);
        };
    }, []);
    return (react_1.default.createElement(MicWidgetDiv, { size: size, style: {
            transform: react_spring_1.interpolate([springProps.holdScale], function (h) {
                return "scale(" + h + ")";
            }),
        } },
        react_1.default.createElement(react_spring_1.animated.div, { style: {
                opacity: springProps.effectOpacity,
            } },
            react_1.default.createElement(MicFx, { gradientStops: gradientStops })),
        !isStartButtonVisible(speechState) && (react_1.default.createElement(MicButton, { onMouseDown: onTangentButtonPress, onMouseUp: onTangentButtonRelease, gradientStops: gradientStops },
            react_1.default.createElement(MicIcon, { state: speechState }))),
        isStartButtonVisible(speechState) && (react_1.default.createElement(MicButton, { onMouseDown: onTangentButtonPress, onMouseUp: onTangentButtonRelease, gradientStops: gradientStops },
            react_1.default.createElement(PowerIcon, { state: speechState })))));
};
exports.PushToTalkButton = PushToTalkButton;
var MicFx = function (props) {
    return (react_1.default.createElement(MicFxSvg, { viewBox: "0 0 246 246", xmlns: "http://www.w3.org/2000/svg" },
        react_1.default.createElement("defs", null,
            react_1.default.createElement("linearGradient", { x1: "50%", y1: "10%", x2: "50%", y2: "100%", id: "a" },
                react_1.default.createElement("stop", { stopColor: props.gradientStops[0], offset: "0%" }),
                react_1.default.createElement("stop", { stopColor: props.gradientStops[1], offset: "100%" })),
            react_1.default.createElement("filter", { x: "-35%", y: "-35%", width: "170%", height: "170%", filterUnits: "objectBoundingBox", id: "b" },
                react_1.default.createElement("feGaussianBlur", { stdDeviation: "18", in: "SourceGraphic" }))),
        react_1.default.createElement("circle", { filter: "url(#b)", cx: "124", cy: "124", r: "79", fill: "url(#a)", fillRule: "evenodd" })));
};
var MicButton = function (props) {
    return (react_1.default.createElement(StyledMicButton, { onClick: props.onClick, onMouseDown: props.onMouseDown, onMouseUp: props.onMouseUp, onTouchStart: props.onMouseDown, onTouchEnd: props.onMouseUp, onDragStart: props.onMouseDown, onDragEnd: props.onMouseUp },
        react_1.default.createElement(StyledButtonFrameSvg, { viewBox: "0 0 92 92", xmlns: "http://www.w3.org/2000/svg" },
            react_1.default.createElement("defs", null,
                react_1.default.createElement("linearGradient", { x1: "50%", y1: "0%", x2: "50%", y2: "100%", id: "a" },
                    react_1.default.createElement("stop", { stopColor: props.gradientStops[0], offset: "0%" }),
                    react_1.default.createElement("stop", { stopColor: props.gradientStops[1], offset: "100%" }))),
            react_1.default.createElement("g", { fill: "none", fillRule: "nonzero" },
                react_1.default.createElement("path", { d: "M46 3.119c23.683 0 42.881 19.198 42.881 42.881S69.683 88.881 46 88.881 3.119 69.683 3.119 46 22.317 3.119 46 3.119z", fill: "#FFF" }),
                react_1.default.createElement("path", { d: "M46 0C20.595 0 0 20.595 0 46s20.595 46 46 46 46-20.595 46-46S71.405 0 46 0zm0 3.119c23.683 0 42.881 19.198 42.881 42.881S69.683 88.881 46 88.881 3.119 69.683 3.119 46 22.317 3.119 46 3.119z", fill: "url(#a)" }))),
        props.children));
};
var MicIcon = function (props) {
    switch (props.state) {
        case react_client_1.SpeechState.Failed:
        case react_client_1.SpeechState.NoBrowserSupport:
            return (react_1.default.createElement(MicIconSvg, { state: props.state, viewBox: "0 0 56 56", xmlns: "http://www.w3.org/2000/svg" },
                react_1.default.createElement("g", { fill: "#000", fillRule: "evenodd" },
                    react_1.default.createElement("path", { d: "M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z", fillRule: "nonzero" }),
                    react_1.default.createElement("path", { d: "M37 13.081V31a8 8 0 11-16 0v-1.919l16-16zM26 1a8 8 0 018 8v1.319L18 26.318V9a8 8 0 018-8zM37.969 7.932l3.74-7.35 3.018 2.625zM39.654 10.608l7.531-3.359.695 3.94z" }))));
        case react_client_1.SpeechState.NoAudioConsent:
            return (react_1.default.createElement(MicIconSvg, { state: props.state, viewBox: "0 0 56 56", xmlns: "http://www.w3.org/2000/svg" },
                react_1.default.createElement("g", { fill: "#000", fillRule: "nonzero" },
                    react_1.default.createElement("path", { d: "M36 14.828V30a8 8 0 01-15.961.79l15.96-15.962zM28 1a8 8 0 018 8v.172L20 25.173V9a8 8 0 018-8z" }),
                    react_1.default.createElement("path", { d: "M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z" }))));
        default:
            return (react_1.default.createElement(MicIconSvg, { state: props.state, viewBox: "0 0 56 56", xmlns: "http://www.w3.org/2000/svg" },
                react_1.default.createElement("g", { fill: "#000", fillRule: "evenodd" },
                    react_1.default.createElement("path", { d: "M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z" }),
                    react_1.default.createElement("rect", { x: "20", y: "1", width: "16", height: "37", rx: "8" }))));
    }
};
var PowerIcon = function (props) {
    return (react_1.default.createElement(MicIconSvg, { state: props.state, viewBox: "0 0 56 56", xmlns: "http://www.w3.org/2000/svg" },
        react_1.default.createElement("g", { fill: "#000", fillRule: "evenodd" },
            react_1.default.createElement("path", { d: "M52 28c0 13.255-10.745 24-24 24S4 41.255 4 28c0-8.921 4.867-16.705 12.091-20.842l1.984 3.474C12.055 14.08 8 20.566 8 28c0 11.046 8.954 20 20 20s20-8.954 20-20c0-7.434-4.056-13.92-10.075-17.368L39.91 7.16C47.133 11.296 52 19.079 52 28z", fillRule: "nonzero" }),
            react_1.default.createElement("rect", { x: "24", y: "1", width: "8", height: "23", rx: "4" }))));
};
var MicColorSpinKeys = styled_components_1.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"], ["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"])));
var MicOpacityPulseKeys = styled_components_1.keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  0% {\n    opacity: 0.1;\n  }\n  50% {\n    opacity: 0.25;\n  }\n  100% {\n    opacity: 0.1;\n  }\n"], ["\n  0% {\n    opacity: 0.1;\n  }\n  50% {\n    opacity: 0.25;\n  }\n  100% {\n    opacity: 0.1;\n  }\n"])));
var MicWidgetDiv = styled_components_1.default(react_spring_1.animated.div)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  width: ", ";\n  height: ", ";\n  position: relative;\n"], ["\n  width: ", ";\n  height: ", ";\n  position: relative;\n"])), function (props) { return props.size; }, function (props) { return props.size; });
var StyledMicButton = styled_components_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  pointer-events: auto;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none !important;\n  -webkit-user-select: none !important;\n"], ["\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  pointer-events: auto;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none !important;\n  -webkit-user-select: none !important;\n"])));
var StyledButtonFrameSvg = styled_components_1.default.svg(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  @media (prefers-reduced-motion: no-preference) {\n    animation: ", " infinite 2.5s linear;\n  }\n"], ["\n  @media (prefers-reduced-motion: no-preference) {\n    animation: ", " infinite 2.5s linear;\n  }\n"])), MicColorSpinKeys);
var MicFxSvg = styled_components_1.default.svg(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  top: -75%;\n  left: -75%;\n  height: 250%;\n  width: 250%;\n  position: absolute;\n  pointer-events: none;\n  @media (prefers-reduced-motion: no-preference) {\n    animation: ", " infinite 2.5s linear;\n  }\n"], ["\n  top: -75%;\n  left: -75%;\n  height: 250%;\n  width: 250%;\n  position: absolute;\n  pointer-events: none;\n  @media (prefers-reduced-motion: no-preference) {\n    animation: ", " infinite 2.5s linear;\n  }\n"])), MicColorSpinKeys);
var MicIconSvg = styled_components_1.default.svg(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n  width: auto;\n  height: 60%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n  transition: 0.25s;\n  ", "\n"], ["\n  width: auto;\n  height: 60%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n  transition: 0.25s;\n  ",
    "\n"])), function (props) {
    switch (props.state) {
        case react_client_1.SpeechState.Idle:
            return styled_components_1.css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n          animation: ", " 4.5s infinite;\n          transition: 0.25s;\n        "], ["\n          animation: ", " 4.5s infinite;\n          transition: 0.25s;\n        "])), MicOpacityPulseKeys);
        case react_client_1.SpeechState.NoAudioConsent:
        case react_client_1.SpeechState.Failed:
        case react_client_1.SpeechState.NoBrowserSupport:
            return styled_components_1.css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n          opacity: 0.1;\n          transition: 0.25s;\n        "], ["\n          opacity: 0.1;\n          transition: 0.25s;\n        "])));
        case react_client_1.SpeechState.Connecting:
        case react_client_1.SpeechState.Loading:
            return styled_components_1.css(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n          animation: ", " 1s infinite;\n          transition: 0.25s;\n        "], ["\n          animation: ", " 1s infinite;\n          transition: 0.25s;\n        "])), MicOpacityPulseKeys);
    }
});
var vibrate = function (durationMs) {
    if (durationMs === void 0) { durationMs = 5; }
    if (navigator.vibrate !== undefined) {
        navigator.vibrate(durationMs);
    }
};
var TangentEvents;
(function (TangentEvents) {
    TangentEvents["Hold"] = "Hold";
    TangentEvents["Release"] = "Release";
    TangentEvents["Cancel"] = "Cancel";
    TangentEvents["Handled"] = "Handled";
})(TangentEvents || (TangentEvents = {}));
var ButtonDefaultState = {
    mouseDrag: false,
    processEvent: false,
};
var buttonReducer = function (state, action) {
    switch (action.type) {
        case TangentEvents.Hold: {
            if (state.mouseDrag)
                return state;
            return __assign(__assign({}, state), { mouseDrag: true, processEvent: true });
        }
        case TangentEvents.Cancel:
        case TangentEvents.Release: {
            if (!state.mouseDrag)
                return state;
            return __assign(__assign({}, state), { mouseDrag: false, processEvent: true });
        }
        case TangentEvents.Handled: {
            return __assign(__assign({}, state), { processEvent: false });
        }
        default:
            throw new Error();
    }
};
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10;
//# sourceMappingURL=PushToTalkButton.js.map